#lang sicp

; Exercise 1.9
; Each of the following two procedures defines a method for adding two positive
; integers in terms of the procedures "inc", which increments its argument by 1,
; and dec, which decrements its argument by 1.

(define (+ a b)
  (if (= a 0)
    b
    (inc (+ (dec a) b))))

(define (+ a b)
  (if (= a 0)
    b
    (+ (dec a) (inc  b))))

; Using the substitution model, illustrate the process generated by each
; procedure in evaluating (+ 4 5). Are these processes iterative or recursive?

; The FIRST procedure generates the following process:
;
; (+ 4 5)
; (inc (+ 3 5))
; (inc (inc (+ 2 5)))
; (inc (inc (inc (+ 1 5))))
; (inc (inc (inc (inc (+ 0 5)))))
; (inc (inc (inc (inc 5))))
; (inc (inc (inc 6)))
; (inc (inc 7))
; (inc 8)
; 9

; Note: The decrement and base case testing operations are omitted to emphasize
; the "shape" of the process.
;
; The procedure definition itself is recursive, as it is defined in terms of
; itself. More to the point though, the process generated is also recursive
; because the amount of "stuff" that needs to be remembered grows linearly with 
; the input size, making it a linear recursive procedure. With each successive
; expansion of the "+" procedure, one more "inc" operation is deferred until the
; base case is reached and the process contracts.

; By contrast, the SECOND procedure generates the following process:
;
; (+ 4 5)
; (+ 3 6)
; (+ 2 7)
; (+ 1 8)
; (+ 0 9)
;
; The procedure itself is again recursive, simply because it is defined in terms
; of itself. Unlike the first procedure however, the process that emerges from
; this procedure is iterative, as it does not exhibit expansion and contraction.
; The state of the operation is expressed entirely by the two state variables
; and a fixed rule for determining how the process should proceed. For this
; reason, the process can pick up from any point and generate the same correct
; result so long as the states of the two varialbes are provided. The amount of
; time, as well as the amount of space, required by the process, grows linearly
; with the input size, making it a linear iterative process on both counts. An
; iterative process that emerges from a recursive procedure is "tail recursive".

